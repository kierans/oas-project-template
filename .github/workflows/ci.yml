name: Generate OAS documentation

on:
  push:
    branches: [ main ]

  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  # Use the commit hash as the cache key.
  CACHE_KEY: ${{ github.sha }}
  OAS_DIST: ./dist/doc

jobs:
  generate-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Docker
        # Have to use master to get SKIP_LOGIN fix
        uses: actions-hub/docker/cli@master
        env:
          SKIP_LOGIN: true

      - name: Make docker image
        run: make docker

      - name: Generate docs
        run: |
          make dist
          sudo mv -v ${{ env.OAS_DIST }}/index.html ${{ env.OAS_DIST }}/api.html

      - name: Cache docs
        id: cache-api-docs
        uses: actions/cache@v2
        with:
          path: ${{ env.OAS_DIST }}
          key: ${{ env.CACHE_KEY }}

  publish-docs-to-pages:
    runs-on: ubuntu-latest
    needs:
      - generate-docs

    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: api-docs-url
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Retrieve docs
        id: cache-api-docs
        uses: actions/cache@v2
        with:
          path: ${{ env.OAS_DIST }}
          key: ${{ env.CACHE_KEY }}

      - name: Setup Pages
        uses: actions/configure-pages@v1

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ${{ env.OAS_DIST }}

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@main
